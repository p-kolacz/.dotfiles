#!/bin/bash

FILENAME=titrak.time
PROJECT=$(basename $PWD)
STATE_FILE="$HOME/.cache/titrak"

_project_started() {
	[[ $(($(cat "$FILENAME" | wc -l)%2)) -eq 1 ]]
}

_insert_timestamp() {
	echo $(date +%s) >> "$FILENAME"
}

_format() {
	printf '%dh:%dm:%ds\n' $(($1/3600)) $(($1%3600/60)) $(($1%60))
}

start() {
	[[ -f $FILENAME ]] && _project_started && echo "Project already started" && exit 11
	[[ -s $STATE_FILE ]] && echo "Another project already started: $(basename $(cat "$STATE_FILE"))" && exit 10
	_insert_timestamp
	echo "$PWD" > "$STATE_FILE"
	echo "Starting project: $PROJECT"
}

stop() {
	[[ ! -f $FILENAME ]] || ! _project_started && echo "Project already stopped" && exit 20
	_insert_timestamp
	echo -n "" > "$STATE_FILE"
	echo "Stopped project: $PROJECT"
}

report() {
	[[ ! -f $FILENAME ]] && echo "No project data found in current directory" && exit 1

	local sum=0
	local last=0
	local i=0
	while read line; do
		if [[ $((i%2)) -eq 0 ]]; then
			last=$line
		else
			((sum=sum+line-last))
		fi
		((++i))
	done < $FILENAME

	echo $(_format $sum)
	[[ $1 = "-r" && -n $2 ]] && echo $(bc <<< "scale=2; $2*$sum/3600")
}

usage() {
	echo "Usage: titrak [start|stop|report [-r hourly-rate]]"
}

case $1 in
	start)
		start ;;
	stop)
		stop ;;
	report)
		report $2 $3;;
	*)
		usage ;;
esac

