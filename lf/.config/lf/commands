%{{
	# notify-send "lf" "id $id"
	tabs=$(lftabs.sh $id list)
	lf -remote "send $id set-prompt \"$tabs\""

	w=$(tput cols)
	if [ $w -le 90 ]; then
		lf -remote "send $id set nopreview"
		lf -remote "send $id set ratios 1"
	# else
		# lf -remote "send $id set preview;set ratios 1:2:3"
	fi
}}

cmd open $run.sh "$f"

cmd on-cd %{{
	tab=$(lftabs.sh $id cd)
	lfdirstory.sh $id $tab push
}}
# on-cd - this break things

### Dirs&Files #################################################################

cmd file-info %{{
	stat -c "%A | %G/%U | %y" "$f"
}}

### Dirs #######################################################################

cmd mkdir %{{
    mkdir -p "$@"
    lf -remote "send $id select \"$@\""
}}

cmd mkdir-cd %{{
	mkdir -p "$1"
    lf -remote "send $id cd \"$1\""
}}

cmd mkdir-selection %{{
	[[ -n $1 ]] && mkdir $1 && mv $fx $1
}}


### Files ######################################################################

cmd chmodx %{{
    chmod +x $fx
    lf -remote "send $id reload"
}}

cmd bulk-rename ${{
    old=$(mktemp)
    new=$(mktemp)
    [ -n $fs ] && fs=$(ls)
    printf "$fs\n" > $old
    printf "$fs\n" > $new
    $EDITOR $new
    [ $(cat $new | wc -l) -ne $(cat $old | wc -l) ] && exit
    paste $old $new | while read names; do
        src=$(printf $names | cut -f1)
        dst=$(printf $names | cut -f2)
        [ $src = $dst ] && continue
        [ -e $dst ] && continue
        mv $src $dst
    done
    rm $old $new
    lf -remote "send $id unselect"
}}

cmd share $curl -F"file=@$fx" https://0x0.st | xclip -selection c

### Links ######################################################################

cmd link_abs %{{
	for file in $(lf -remote 'load'); do
        if [ ! -n "${mode+1}" ]; then
            mode="$file"
            continue
        fi
        files+=("$file")
    done

	[[ ${#files[@]} -lt 1 ]] && echo "No files selected" && exit 1
	ln -s ${files[@]} -t .
}}

cmd link_rel %{{
	for file in $(lf -remote 'load'); do
        if [ ! -n "${mode+1}" ]; then
            mode="$file"
            continue
        fi
        files+=("$file")
    done

	[[ ${#files[@]} -lt 1 ]] && echo "No files selected" && exit 1
	ln -sr ${files[@]} -t .
}}

### Copy names #################################################################

cmd yank-basename &{{
    echo "$fx" | xargs -r -d '\n' basename -a -- | xclip -i -selection clipboard
}}

cmd yank-dirname &{{
    dirname -- "$f" | tr -d '\n' | xclip -i -selection clipboard
}}

cmd yank-path &{{
    echo "$fx" | xclip -i -selection clipboard
}}

### Trash ######################################################################

cmd trash-empty ${{
	read -p "Are you sure? " -n 1 -r
	[[ $REPLY =~ ^[Yy]$ ]] && trash-empty
}}

### Archives ###################################################################

cmd backup %{{
	zip -r "${f}_$(date +%F_%T).zip" "$(basename "$f")"
}}

cmd extract %{{
	# extract -f $(basename "${f%.*}") $f
	extract . $fx
}}

cmd tar %{{
	tar cvf "$f.tar" "$(basename "$f")"
}}

cmd zip %{{
	zip -r "$f.zip" "$(basename "$f")"
}}

### Tabs #######################################################################

cmd set-prompt %{{
	lf -remote "send $id set promptfmt \"$1 \033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\""
}}

cmd tab-select %{{
	dir=$(lftabs.sh $id select $1)
	lfdirstory.sh $id $1 lock
	lf -remote "send $id cd \"$dir\""
	tabs=$(lftabs.sh $id list)
	lf -remote "send $id set-prompt \"$tabs\""
}}

cmd tab-delete %{{
	dir=$(lftabs.sh $id delete)
	tab=$(lftabs.sh $id current)
	lfdirstory.sh $id $tab lock
	lf -remote "send $id cd \"$dir\""
	tabs=$(lftabs.sh $id list)
	lf -remote "send $id set-prompt \"$tabs\""
}}

cmd tab-next %{{
	dir=$(lftabs.sh $id next)
	tab=$(lftabs.sh $id current)
	lfdirstory.sh $id $tab lock
	lf -remote "send $id cd \"$dir\""
	tabs=$(lftabs.sh $id list)
	lf -remote "send $id set-prompt \"$tabs\""
}}

cmd tab-prev %{{
	dir=$(lftabs.sh $id prev)
	tab=$(lftabs.sh $id current)
	lfdirstory.sh $id $tab lock
	lf -remote "send $id cd \"$dir\""
	tabs=$(lftabs.sh $id list)
	lf -remote "send $id set-prompt \"$tabs\""
}}

### History ####################################################################

cmd history-back %{{
	tab=$(lftabs.sh $id current)
	res=$(lfdirstory.sh $id $tab back)
	[[ $? -eq 0 ]] && lf -remote "send $id cd \"$res\"" || echo "$res"
}}

cmd history-forward %{{
	tab=$(lftabs.sh $id current)
	res=$(lfdirstory.sh $id $tab forward)
	[[ $? -eq 0 ]] && lf -remote "send $id cd \"$res\"" || echo "$res"
}}

# vim: filetype=vim commentstring=#%s
