#!/bin/bash

# Called by nsxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon: all marked images, if in thumbnail mode and at least one
# image has been marked, otherwise the current image. nsxiv(1) will block until
# the handler terminates. It then checks which images have been modified and
# reloads them.

# By default nsxiv(1) will send one image per-line to stdin, however when using
# -0 the image list will be NULL separated and the enviornment variable
# "$NSXIV_USING_NULL" will be set to 1.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# If KEY has an uppercase equivalent, S-KEY is resolved into it. For instance,
# K replaces S-k and Scedilla replaces S-scedilla, but S-Delete is sent as-is.

exec &>> "$XDG_STATE_HOME/nsxiv.log"
# exec 2>&1

DEST_DIRS="$HOME/Cloud/Images $HOME/Data/Photos $HOME/tmp $HOME/Leathercraft"

ICON=/usr/local/share/icons/hicolor/64x64/apps/nsxiv.png
TMP_FILE=/tmp/nsxiv-kh-operation

notify() {
	notify-send -i $ICON "NSXIV" "$1"
}

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*)           mogrify  -rotate "$degree" "$file" ;;
		esac
	done
}

# Prompt for directory & perform operation (cp, mv)
prompt_and_op() {
	dir=$(find $DEST_DIRS -type d -not -path '*/.*' 2>/dev/null | rofi -dmenu -i -p " " -theme-str "window {width: 50%;}" -location 6)
	operation $1 "$dir"
}

# Perform operation and write repeat instructions to tmp file
operation() {
	op=$1
	dir="$2"
	[[ -d $dir ]] || return
	while read file; do
		versions=("${file%.*}".*)
		$op "${versions[@]}" "$dir"
	done
	echo "$op $dir" > $TMP_FILE
	notify "$op to $dir"
}

# Repeat last operation if instructions fount in tmp file
repeat() {
	[[ -f $TMP_FILE ]] || return
	read op dir < $TMP_FILE
	operation $op "$dir"
}

# Open RAW version of file (or file itself) in $1 app
develop() {
	app=$1
	while read file; do
		rootname="${file%.*}"
		filename="${rootname}.DNG"
		if [[ -f ${rootname}.DNG ]]; then
			$app "${rootname}.DNG" &
		elif [[ -f ${rootname}.PEF ]]; then
			$app "${rootname}.PEF" &
		else
			$app "$file" &
		fi
	done
}

case "$1" in
	"period")   repeat ;;
	"w")        while read file; do wallpaper set "$file"; notify "Wallpaper set:\n$file"; done ;;
	"x")        xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
	"C-c")      while read file; do xclip -selection clipboard -target image/png "$file"; notify "$file content copied to clipboard"; done ;;
	"e")        while read file; do $TERMINAL -e sh -c "exiv2 '$file' | $PAGER" & done ;;
	"i")        while read file; do notify "$(mediainfo "$file")"; done ;;
	"l")        while read file; do echo "$file"; done; kill $PPID ;; # dmenu imitation
	"g")        tr '\n' '\0' | xargs -0 gimp & ;;
	"r")        develop rawtherapee ;;
	"d")        develop darktable ;;
	"c")        prompt_and_op cp ;;
	"m")        prompt_and_op mv ;;
	"C-d")      while read file; do trash "${file%.*}".*; done ;;
	"C-comma")  rotate 270 ;;
	"C-period") rotate  90 ;;
	"C-slash")  rotate 180 ;;
esac

