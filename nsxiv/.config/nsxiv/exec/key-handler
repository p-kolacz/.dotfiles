#!/bin/sh

# Called by nsxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon: all marked images, if in thumbnail mode and at least one
# image has been marked, otherwise the current image. nsxiv(1) will block until
# the handler terminates. It then checks which images have been modified and
# reloads them.

# By default nsxiv(1) will send one image per-line to stdin, however when using
# -0 the image list will be NULL separated and the enviornment variable
# "$NSXIV_USING_NULL" will be set to 1.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.
# If KEY has an uppercase equivalent, S-KEY is resolved into it. For instance,
# K replaces S-k and Scedilla replaces S-scedilla, but S-Delete is sent as-is.

PHOTOS_DIR="$HOME/Photos/"

ICON=/usr/local/share/icons/hicolor/64x64/apps/nsxiv.png

notify() {
	notify-send -i $ICON "NSXIV" "$1"
}

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*)           mogrify  -rotate "$degree" "$file" ;;
		esac
	done
}

operation() {
	op=$1
	dest=$(find "$PHOTOS_DIR" -type d | $VMENU)
	[[ -d $dest ]] || return
	while read file; do
		$op $(find ${file%.*}* -printf "%p ") "$dest"
	done
	notify "Operation $op successful"
}

case "$1" in
	"w")        while read file; do wallpaper set "$file"; notify "Wallpaper set:\n$file"; done ;;
	"x")        xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
	"c")        while read file; do xclip -selection clipboard -target image/png "$file"; notify "$file content copied to clipboard"; done ;;
	"e")        while read file; do $TERMINAL -e sh -c "exiv2 '$file' | $PAGER" & done ;;
	"i")        while read file; do notify "$(mediainfo "$file")"; done ;;
	"l")        while read file; do echo "$file"; done; kill $PPID ;; # dmenu imitation
	"g")        tr '\n' '\0' | xargs -0 gimp & ;;
	"r")        tr '\n' '\0' | xargs -0 rawtherapee & ;;
	"C-comma")  rotate 270 ;;
	"C-period") rotate  90 ;;
	"C-slash")  rotate 180 ;;
	"C-d")      while read file; do trash "$file"; notify "$file moved to trash"; done ;;
	"C-c")      operation cp ;;
	"C-m")      operation mv ;;
esac

